// generated by Fast Light User Interface Designer (fluid) version 1.0308

#include "uilogic.h"

Fl_Group *stats=(Fl_Group *)0;

Fl_Output *gs_today=(Fl_Output *)0;

Fl_Output *gs_yesterday=(Fl_Output *)0;

Fl_Output *gs_week=(Fl_Output *)0;

Fl_Output *gs_alltime=(Fl_Output *)0;

Fl_Group *keyboard=(Fl_Group *)0;

Fl_Button *K_q=(Fl_Button *)0;

Fl_Button *K_w=(Fl_Button *)0;

Fl_Button *K_e=(Fl_Button *)0;

Fl_Button *K_r=(Fl_Button *)0;

Fl_Button *K_t=(Fl_Button *)0;

Fl_Button *K_y=(Fl_Button *)0;

Fl_Button *K_u=(Fl_Button *)0;

Fl_Button *K_i=(Fl_Button *)0;

Fl_Button *K_o=(Fl_Button *)0;

Fl_Button *K_p=(Fl_Button *)0;

Fl_Button *K_Lsqb=(Fl_Button *)0;

Fl_Button *K_Rsbq=(Fl_Button *)0;

Fl_Button *K_backsl=(Fl_Button *)0;

Fl_Button *K_grave=(Fl_Button *)0;

Fl_Button *K_one=(Fl_Button *)0;

Fl_Button *K_two=(Fl_Button *)0;

Fl_Button *K_three=(Fl_Button *)0;

Fl_Button *K_four=(Fl_Button *)0;

Fl_Button *K_five=(Fl_Button *)0;

Fl_Button *K_six=(Fl_Button *)0;

Fl_Button *K_seven=(Fl_Button *)0;

Fl_Button *K_eight=(Fl_Button *)0;

Fl_Button *K_nine=(Fl_Button *)0;

Fl_Button *K_zero=(Fl_Button *)0;

Fl_Button *K_minus=(Fl_Button *)0;

Fl_Button *K_equals=(Fl_Button *)0;

Fl_Button *K_tab=(Fl_Button *)0;

Fl_Button *K_del=(Fl_Button *)0;

Fl_Button *K_esc=(Fl_Button *)0;

Fl_Button *K_f1=(Fl_Button *)0;

Fl_Button *K_f2=(Fl_Button *)0;

Fl_Button *K_f3=(Fl_Button *)0;

Fl_Button *K_f4=(Fl_Button *)0;

Fl_Button *K_f5=(Fl_Button *)0;

Fl_Button *K_f6=(Fl_Button *)0;

Fl_Button *K_f7=(Fl_Button *)0;

Fl_Button *K_f8=(Fl_Button *)0;

Fl_Button *K_f9=(Fl_Button *)0;

Fl_Button *K_f10=(Fl_Button *)0;

Fl_Button *K_f11=(Fl_Button *)0;

Fl_Button *K_f12=(Fl_Button *)0;

Fl_Button *K_caps=(Fl_Button *)0;

Fl_Button *K_enter=(Fl_Button *)0;

Fl_Button *K_a=(Fl_Button *)0;

Fl_Button *K_s=(Fl_Button *)0;

Fl_Button *K_d=(Fl_Button *)0;

Fl_Button *K_f=(Fl_Button *)0;

Fl_Button *K_g=(Fl_Button *)0;

Fl_Button *K_h=(Fl_Button *)0;

Fl_Button *K_j=(Fl_Button *)0;

Fl_Button *K_k=(Fl_Button *)0;

Fl_Button *K_l=(Fl_Button *)0;

Fl_Button *K_semicolon=(Fl_Button *)0;

Fl_Button *K_apostrophe=(Fl_Button *)0;

Fl_Button *K_shiftL=(Fl_Button *)0;

Fl_Button *K_shiftR=(Fl_Button *)0;

Fl_Button *K_z=(Fl_Button *)0;

Fl_Button *K_x=(Fl_Button *)0;

Fl_Button *K_c=(Fl_Button *)0;

Fl_Button *K_v=(Fl_Button *)0;

Fl_Button *K_b=(Fl_Button *)0;

Fl_Button *K_n=(Fl_Button *)0;

Fl_Button *K_m=(Fl_Button *)0;

Fl_Button *K_comma=(Fl_Button *)0;

Fl_Button *K_dot=(Fl_Button *)0;

Fl_Button *K_frontsl=(Fl_Button *)0;

Fl_Button *K_ctrlL=(Fl_Button *)0;

Fl_Button *K_alt1=(Fl_Button *)0;

Fl_Button *K_cmdL=(Fl_Button *)0;

Fl_Button *K_ctrlR=(Fl_Button *)0;

Fl_Button *K_cmdR=(Fl_Button *)0;

Fl_Button *K_fn=(Fl_Button *)0;

Fl_Button *K_space=(Fl_Button *)0;

Fl_Group *nav=(Fl_Group *)0;

Fl_Button *nav_today=(Fl_Button *)0;

Fl_Button *nav_yesterday=(Fl_Button *)0;

Fl_Button *nav_week=(Fl_Button *)0;

Fl_Button *nav_month=(Fl_Button *)0;

Fl_Button *nav_sem=(Fl_Button *)0;

Fl_Button *nav_year=(Fl_Button *)0;

Fl_Button *nav_all=(Fl_Button *)0;

Fl_Button *nav_more=(Fl_Button *)0;

static void cb_nav_more(Fl_Button*, void*) {
  UILogic::colourKeyboard();
}

Fl_Double_Window* make_main_window() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(363, 214, "TinyKeys");
    w = o; if (w) {/* empty */}
    o->labelfont(13);
    { stats = new Fl_Group(0, 0, 363, 38, "Glance Stats");
      stats->labeltype(FL_NO_LABEL);
      { gs_today = new Fl_Output(5, 16, 83, 18, "Today:");
        gs_today->align(Fl_Align(FL_ALIGN_TOP));
        gs_today->set_output();
      } // Fl_Output* gs_today
      { gs_yesterday = new Fl_Output(96, 16, 83, 18, "Yesterday:");
        gs_yesterday->align(Fl_Align(FL_ALIGN_TOP));
        gs_yesterday->set_output();
      } // Fl_Output* gs_yesterday
      { gs_week = new Fl_Output(187, 16, 83, 18, "Week:");
        gs_week->align(Fl_Align(FL_ALIGN_TOP));
        gs_week->set_output();
      } // Fl_Output* gs_week
      { gs_alltime = new Fl_Output(279, 16, 83, 18, "All Time:");
        gs_alltime->align(Fl_Align(FL_ALIGN_TOP));
        gs_alltime->set_output();
      } // Fl_Output* gs_alltime
      stats->end();
    } // Fl_Group* stats
    { keyboard = new Fl_Group(0, 38, 360, 147, "Keyboard");
      keyboard->labeltype(FL_NO_LABEL);
      { K_q = new Fl_Button(40, 90, 20, 20, "q");
        K_q->box(FL_BORDER_BOX);
        K_q->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_q
      { K_w = new Fl_Button(65, 90, 20, 20, "w");
        K_w->box(FL_BORDER_BOX);
        K_w->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_w
      { K_e = new Fl_Button(90, 90, 20, 20, "e");
        K_e->box(FL_BORDER_BOX);
        K_e->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_e
      { K_r = new Fl_Button(115, 90, 20, 20, "r");
        K_r->box(FL_BORDER_BOX);
        K_r->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_r
      { K_t = new Fl_Button(140, 90, 20, 20, "t");
        K_t->box(FL_BORDER_BOX);
        K_t->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_t
      { K_y = new Fl_Button(165, 90, 20, 20, "y");
        K_y->box(FL_BORDER_BOX);
        K_y->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_y
      { K_u = new Fl_Button(190, 90, 20, 20, "u");
        K_u->box(FL_BORDER_BOX);
        K_u->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_u
      { K_i = new Fl_Button(215, 90, 20, 20, "i");
        K_i->box(FL_BORDER_BOX);
        K_i->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_i
      { K_o = new Fl_Button(240, 90, 20, 20, "o");
        K_o->box(FL_BORDER_BOX);
        K_o->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_o
      { K_p = new Fl_Button(265, 90, 20, 20, "p");
        K_p->box(FL_BORDER_BOX);
        K_p->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_p
      { K_Lsqb = new Fl_Button(290, 90, 20, 20, "[");
        K_Lsqb->box(FL_BORDER_BOX);
        K_Lsqb->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_Lsqb
      { K_Rsbq = new Fl_Button(315, 90, 20, 20, "]");
        K_Rsbq->box(FL_BORDER_BOX);
        K_Rsbq->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_Rsbq
      { K_backsl = new Fl_Button(340, 90, 20, 20, "\\");
        K_backsl->box(FL_BORDER_BOX);
        K_backsl->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_backsl
      { K_grave = new Fl_Button(5, 65, 20, 20, "`");
        K_grave->box(FL_BORDER_BOX);
        K_grave->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_grave
      { K_one = new Fl_Button(30, 65, 20, 20, "1");
        K_one->box(FL_BORDER_BOX);
        K_one->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_one
      { K_two = new Fl_Button(55, 65, 20, 20, "2");
        K_two->box(FL_BORDER_BOX);
        K_two->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_two
      { K_three = new Fl_Button(80, 65, 20, 20, "3");
        K_three->box(FL_BORDER_BOX);
        K_three->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_three
      { K_four = new Fl_Button(105, 65, 20, 20, "4");
        K_four->box(FL_BORDER_BOX);
        K_four->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_four
      { K_five = new Fl_Button(130, 65, 20, 20, "5");
        K_five->box(FL_BORDER_BOX);
        K_five->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_five
      { K_six = new Fl_Button(155, 65, 20, 20, "6");
        K_six->box(FL_BORDER_BOX);
        K_six->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_six
      { K_seven = new Fl_Button(180, 65, 20, 20, "7");
        K_seven->box(FL_BORDER_BOX);
        K_seven->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_seven
      { K_eight = new Fl_Button(205, 65, 20, 20, "8");
        K_eight->box(FL_BORDER_BOX);
        K_eight->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_eight
      { K_nine = new Fl_Button(230, 65, 20, 20, "9");
        K_nine->box(FL_BORDER_BOX);
        K_nine->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_nine
      { K_zero = new Fl_Button(255, 65, 20, 20, "0");
        K_zero->box(FL_BORDER_BOX);
        K_zero->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_zero
      { K_minus = new Fl_Button(280, 65, 20, 20, "-");
        K_minus->box(FL_BORDER_BOX);
        K_minus->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_minus
      { K_equals = new Fl_Button(305, 65, 20, 20, "=");
        K_equals->box(FL_BORDER_BOX);
        K_equals->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_equals
      { K_tab = new Fl_Button(5, 90, 30, 20, "tab");
        K_tab->box(FL_BORDER_BOX);
        K_tab->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_tab
      { K_del = new Fl_Button(330, 65, 30, 20, "bs");
        K_del->box(FL_BORDER_BOX);
        K_del->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_del
      { K_esc = new Fl_Button(5, 40, 30, 20, "esc");
        K_esc->box(FL_BORDER_BOX);
        K_esc->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_esc
      { K_f1 = new Fl_Button(40, 40, 20, 20, "f1");
        K_f1->box(FL_BORDER_BOX);
        K_f1->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_f1
      { K_f2 = new Fl_Button(65, 40, 20, 20, "f2");
        K_f2->box(FL_BORDER_BOX);
        K_f2->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_f2
      { K_f3 = new Fl_Button(90, 40, 20, 20, "f3");
        K_f3->box(FL_BORDER_BOX);
        K_f3->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_f3
      { K_f4 = new Fl_Button(115, 40, 20, 20, "f4");
        K_f4->box(FL_BORDER_BOX);
        K_f4->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_f4
      { K_f5 = new Fl_Button(145, 40, 20, 20, "f5");
        K_f5->box(FL_BORDER_BOX);
        K_f5->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_f5
      { K_f6 = new Fl_Button(170, 40, 20, 20, "f6");
        K_f6->box(FL_BORDER_BOX);
        K_f6->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_f6
      { K_f7 = new Fl_Button(195, 40, 20, 20, "f7");
        K_f7->box(FL_BORDER_BOX);
        K_f7->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_f7
      { K_f8 = new Fl_Button(220, 40, 20, 20, "f8");
        K_f8->box(FL_BORDER_BOX);
        K_f8->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_f8
      { K_f9 = new Fl_Button(250, 40, 20, 20, "f9");
        K_f9->box(FL_BORDER_BOX);
        K_f9->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_f9
      { K_f10 = new Fl_Button(275, 40, 25, 20, "f10");
        K_f10->box(FL_BORDER_BOX);
        K_f10->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_f10
      { K_f11 = new Fl_Button(305, 40, 25, 20, "f11");
        K_f11->box(FL_BORDER_BOX);
        K_f11->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_f11
      { K_f12 = new Fl_Button(335, 40, 25, 20, "f12");
        K_f12->box(FL_BORDER_BOX);
        K_f12->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_f12
      { K_caps = new Fl_Button(5, 115, 35, 20, "caps");
        K_caps->box(FL_BORDER_BOX);
        K_caps->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_caps
      { K_enter = new Fl_Button(320, 115, 40, 20, "enter");
        K_enter->box(FL_BORDER_BOX);
        K_enter->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_enter
      { K_a = new Fl_Button(45, 115, 20, 20, "a");
        K_a->box(FL_BORDER_BOX);
        K_a->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_a
      { K_s = new Fl_Button(70, 115, 20, 20, "s");
        K_s->box(FL_BORDER_BOX);
        K_s->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_s
      { K_d = new Fl_Button(95, 115, 20, 20, "d");
        K_d->box(FL_BORDER_BOX);
        K_d->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_d
      { K_f = new Fl_Button(120, 115, 20, 20, "f");
        K_f->box(FL_BORDER_BOX);
        K_f->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_f
      { K_g = new Fl_Button(145, 115, 20, 20, "g");
        K_g->box(FL_BORDER_BOX);
        K_g->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_g
      { K_h = new Fl_Button(170, 115, 20, 20, "h");
        K_h->box(FL_BORDER_BOX);
        K_h->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_h
      { K_j = new Fl_Button(195, 115, 20, 20, "j");
        K_j->box(FL_BORDER_BOX);
        K_j->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_j
      { K_k = new Fl_Button(220, 115, 20, 20, "k");
        K_k->box(FL_BORDER_BOX);
        K_k->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_k
      { K_l = new Fl_Button(245, 115, 20, 20, "l");
        K_l->box(FL_BORDER_BOX);
        K_l->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_l
      { K_semicolon = new Fl_Button(270, 115, 20, 20, ";");
        K_semicolon->box(FL_BORDER_BOX);
        K_semicolon->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_semicolon
      { K_apostrophe = new Fl_Button(295, 115, 20, 20, "\'");
        K_apostrophe->box(FL_BORDER_BOX);
        K_apostrophe->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_apostrophe
      { K_shiftL = new Fl_Button(5, 140, 50, 20, "shift");
        K_shiftL->box(FL_BORDER_BOX);
        K_shiftL->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_shiftL
      { K_shiftR = new Fl_Button(310, 140, 50, 20, "shift");
        K_shiftR->box(FL_BORDER_BOX);
        K_shiftR->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_shiftR
      { K_z = new Fl_Button(60, 140, 20, 20, "z");
        K_z->box(FL_BORDER_BOX);
        K_z->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_z
      { K_x = new Fl_Button(85, 140, 20, 20, "x");
        K_x->box(FL_BORDER_BOX);
        K_x->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_x
      { K_c = new Fl_Button(110, 140, 20, 20, "c");
        K_c->box(FL_BORDER_BOX);
        K_c->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_c
      { K_v = new Fl_Button(135, 140, 20, 20, "v");
        K_v->box(FL_BORDER_BOX);
        K_v->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_v
      { K_b = new Fl_Button(160, 140, 20, 20, "b");
        K_b->box(FL_BORDER_BOX);
        K_b->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_b
      { K_n = new Fl_Button(185, 140, 20, 20, "n");
        K_n->box(FL_BORDER_BOX);
        K_n->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_n
      { K_m = new Fl_Button(210, 140, 20, 20, "m");
        K_m->box(FL_BORDER_BOX);
        K_m->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_m
      { K_comma = new Fl_Button(235, 140, 20, 20, ",");
        K_comma->box(FL_BORDER_BOX);
        K_comma->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_comma
      { K_dot = new Fl_Button(260, 140, 20, 20, ".");
        K_dot->box(FL_BORDER_BOX);
        K_dot->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_dot
      { K_frontsl = new Fl_Button(285, 140, 20, 20, "/");
        K_frontsl->box(FL_BORDER_BOX);
        K_frontsl->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_frontsl
      { K_ctrlL = new Fl_Button(5, 165, 25, 20, "ctrl");
        K_ctrlL->box(FL_BORDER_BOX);
        K_ctrlL->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_ctrlL
      { K_alt1 = new Fl_Button(35, 165, 25, 20, "alt");
        K_alt1->box(FL_BORDER_BOX);
        K_alt1->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_alt1
      { K_cmdL = new Fl_Button(65, 165, 30, 20, "cmd");
        K_cmdL->box(FL_BORDER_BOX);
        K_cmdL->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_cmdL
      { K_ctrlR = new Fl_Button(335, 165, 25, 20, "ctrl");
        K_ctrlR->box(FL_BORDER_BOX);
        K_ctrlR->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_ctrlR
      { K_cmdR = new Fl_Button(270, 165, 30, 20, "cmd");
        K_cmdR->box(FL_BORDER_BOX);
        K_cmdR->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_cmdR
      { K_fn = new Fl_Button(305, 165, 25, 20, "fn");
        K_fn->box(FL_BORDER_BOX);
        K_fn->down_box(FL_BORDER_BOX);
      } // Fl_Button* K_fn
      { K_space = new Fl_Button(100, 165, 165, 20, "space");
        K_space->box(FL_BORDER_BOX);
        K_space->down_box(FL_BORDER_BOX);
        K_space->labeltype(FL_NO_LABEL);
      } // Fl_Button* K_space
      keyboard->end();
    } // Fl_Group* keyboard
    { nav = new Fl_Group(5, 190, 355, 30, "Nav");
      nav->labeltype(FL_NO_LABEL);
      { nav_today = new Fl_Button(5, 190, 45, 20, "Today");
        nav_today->type(102);
        nav_today->box(FL_BORDER_BOX);
        nav_today->down_box(FL_BORDER_BOX);
        nav_today->color((Fl_Color)46);
        nav_today->selection_color((Fl_Color)35);
      } // Fl_Button* nav_today
      { nav_yesterday = new Fl_Button(49, 190, 71, 20, "Yesterday");
        nav_yesterday->type(102);
        nav_yesterday->box(FL_BORDER_BOX);
        nav_yesterday->down_box(FL_BORDER_BOX);
        nav_yesterday->color((Fl_Color)46);
        nav_yesterday->selection_color((Fl_Color)35);
      } // Fl_Button* nav_yesterday
      { nav_week = new Fl_Button(119, 190, 41, 20, "Week");
        nav_week->type(102);
        nav_week->box(FL_BORDER_BOX);
        nav_week->down_box(FL_BORDER_BOX);
        nav_week->color((Fl_Color)46);
        nav_week->selection_color((Fl_Color)35);
      } // Fl_Button* nav_week
      { nav_month = new Fl_Button(159, 190, 46, 20, "Month");
        nav_month->type(102);
        nav_month->box(FL_BORDER_BOX);
        nav_month->down_box(FL_BORDER_BOX);
        nav_month->color((Fl_Color)46);
        nav_month->selection_color((Fl_Color)35);
      } // Fl_Button* nav_month
      { nav_sem = new Fl_Button(204, 190, 40, 20, "Sem.");
        nav_sem->type(102);
        nav_sem->box(FL_BORDER_BOX);
        nav_sem->down_box(FL_BORDER_BOX);
        nav_sem->color((Fl_Color)46);
        nav_sem->selection_color((Fl_Color)35);
      } // Fl_Button* nav_sem
      { nav_year = new Fl_Button(243, 190, 36, 20, "Year");
        nav_year->type(102);
        nav_year->box(FL_BORDER_BOX);
        nav_year->down_box(FL_BORDER_BOX);
        nav_year->color((Fl_Color)46);
        nav_year->selection_color((Fl_Color)35);
      } // Fl_Button* nav_year
      { nav_all = new Fl_Button(278, 190, 26, 20, "All");
        nav_all->type(102);
        nav_all->box(FL_BORDER_BOX);
        nav_all->down_box(FL_BORDER_BOX);
        nav_all->color((Fl_Color)46);
        nav_all->selection_color((Fl_Color)35);
      } // Fl_Button* nav_all
      nav->end();
    } // Fl_Group* nav
    { Fl_Box* o = new Fl_Box(0, 36, 363, 1, "spacer1");
      o->box(FL_BORDER_BOX);
      o->color(FL_GRAY0);
      o->labeltype(FL_NO_LABEL);
    } // Fl_Box* o
    { Fl_Box* o = new Fl_Box(0, 187, 363, 1, "spacer2");
      o->box(FL_BORDER_BOX);
      o->color(FL_GRAY0);
      o->labeltype(FL_NO_LABEL);
    } // Fl_Box* o
    { nav_more = new Fl_Button(310, 190, 50, 20, "More");
      nav_more->down_box(FL_DOWN_BOX);
      nav_more->selection_color((Fl_Color)35);
      nav_more->callback((Fl_Callback*)cb_nav_more);
    } // Fl_Button* nav_more
    o->size_range(348, 170, 348, 170);
    o->end();
  } // Fl_Double_Window* o
  return w;
}
